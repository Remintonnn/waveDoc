#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 8.0
#  in conjunction with Tcl version 8.6
#    Jul 25, 2025 06:28:29 PM CST  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

_location = os.path.dirname(__file__)

import waveTicket_support

_bgcolor = '#d9d9d9'
_fgcolor = '#000000'
_tabfg1 = 'black' 
_tabfg2 = 'white' 
_bgmode = 'light' 
_tabbg1 = '#d9d9d9' 
_tabbg2 = 'gray40' 

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran: return        
    try: waveTicket_support.root.tk.call('source',
                os.path.join(_location, 'themes', 'default.tcl'))
    except: pass
    style = ttk.Style()
    style.theme_use('default')
    style.configure('.', font = "TkDefaultFont")
    if sys.platform == "win32":
       style.theme_use('winnative')    
    _style_code_ran = 1

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("721x605+624+200")
        top.minsize(120, 1)
        top.maxsize(1924, 1061)
        top.resizable(1,  1)
        top.title("WaveDoc")
        top.configure(relief="groove")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="#000000")

        self.top = top
        self.DateText = tk.StringVar()
        self.MonthText = tk.StringVar()
        self.MinuteText = tk.StringVar()
        self.HourText = tk.StringVar()
        self.WaveInfoAutoRefresh = tk.IntVar()
        self.WaveRequestFinishMsgAutoReset = tk.IntVar()

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.rawMsg = tk.Text(self.top)
        self.rawMsg.place(relx=0.014, rely=0.066, relheight=0.304
                , relwidth=0.318)
        self.rawMsg.configure(background="white")
        self.rawMsg.configure(font="TkTextFont")
        self.rawMsg.configure(foreground="black")
        self.rawMsg.configure(highlightbackground="#d9d9d9")
        self.rawMsg.configure(highlightcolor="#000000")
        self.rawMsg.configure(insertbackground="#000000")
        self.rawMsg.configure(selectbackground="#d9d9d9")
        self.rawMsg.configure(selectforeground="black")
        self.rawMsg.configure(wrap="word")
        self.rawMsg_tooltip = \
        ToolTip(self.rawMsg, '''Ë®äÊÅØË≤ºÈÄôRÂÖàÁîü Êï¥ÂÄãË®äÊÅØ ÈÄ£ÂêçÂ≠óÈÇ£‰∫õ‰∏ÄËµ∑''')

        self.WaveRawMsgLabel = tk.Label(self.top)
        self.WaveRawMsgLabel.place(relx=0.015, rely=0.017, height=32, width=88)
        self.WaveRawMsgLabel.configure(activebackground="#d9d9d9")
        self.WaveRawMsgLabel.configure(activeforeground="black")
        self.WaveRawMsgLabel.configure(background="#d9d9d9")
        self.WaveRawMsgLabel.configure(borderwidth="4")
        self.WaveRawMsgLabel.configure(disabledforeground="#a3a3a3")
        self.WaveRawMsgLabel.configure(font="-family {Segoe UI} -size 12")
        self.WaveRawMsgLabel.configure(foreground="#000000")
        self.WaveRawMsgLabel.configure(highlightbackground="#d9d9d9")
        self.WaveRawMsgLabel.configure(highlightcolor="#000000")
        self.WaveRawMsgLabel.configure(justify='right')
        self.WaveRawMsgLabel.configure(relief="groove")
        self.WaveRawMsgLabel.configure(text='''Êµ™ÂñÆË®äÊÅØ''')
        self.WaveRawMsgLabel_tooltip = \
        ToolTip(self.WaveRawMsgLabel, '''(ÈªûÈÄô‰æÜÁîüÊàêÊ∏¨Ë©¶ÊñáÊú¨)''')

        self.WaveMsg = tk.LabelFrame(self.top)
        self.WaveMsg.place(relx=0.017, rely=0.38, relheight=0.587
                , relwidth=0.963)
        self.WaveMsg.configure(relief='groove')
        self.WaveMsg.configure(font="-family {Segoe UI} -size 9")
        self.WaveMsg.configure(foreground="#000000")
        self.WaveMsg.configure(text='''Ë®äÊÅØÁîüÊàê''')
        self.WaveMsg.configure(background="#d9d9d9")
        self.WaveMsg.configure(highlightbackground="#d9d9d9")
        self.WaveMsg.configure(highlightcolor="#000000")

        self.Label3_1_1_1_1 = tk.Label(self.WaveMsg)
        self.Label3_1_1_1_1.place(relx=0.016, rely=0.462, height=16, width=113
                , bordermode='ignore')
        self.Label3_1_1_1_1.configure(activebackground="#d9d9d9")
        self.Label3_1_1_1_1.configure(activeforeground="black")
        self.Label3_1_1_1_1.configure(background="#d9d9d9")
        self.Label3_1_1_1_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1_1_1_1.configure(font="-family {Segoe UI} -size 10 -weight bold")
        self.Label3_1_1_1_1.configure(foreground="#000000")
        self.Label3_1_1_1_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1_1_1_1.configure(highlightcolor="#000000")
        self.Label3_1_1_1_1.configure(relief="ridge")
        self.Label3_1_1_1_1.configure(text='''ÁµêÂñÆË®äÊÅØ''')

        self.EwEnch = tk.LabelFrame(self.WaveMsg)
        self.EwEnch.place(relx=0.533, rely=0.662, relheight=0.141, relwidth=0.452
                , bordermode='ignore')
        self.EwEnch.configure(relief='sunken')
        self.EwEnch.configure(font="-family {Segoe UI} -size 9")
        self.EwEnch.configure(foreground="#000000")
        self.EwEnch.configure(relief="sunken")
        self.EwEnch.configure(text='''Ewüìâ''')
        self.EwEnch.configure(background="#d9d9d9")
        self.EwEnch.configure(highlightbackground="#d9d9d9")
        self.EwEnch.configure(highlightcolor="#000000")

        self.VFX1Button = tk.Button(self.EwEnch)
        self.VFX1Button.place(relx=0.035, rely=0.34, height=26, width=47
                , bordermode='ignore')
        self.VFX1Button.configure(activebackground="#d9d9d9")
        self.VFX1Button.configure(activeforeground="black")
        self.VFX1Button.configure(background="#d9d9d9")
        self.VFX1Button.configure(command=lambda: waveTicket_support.addEnch(self.VFX1Button))
        self.VFX1Button.configure(disabledforeground="#a3a3a3")
        self.VFX1Button.configure(font="-family {Segoe UI} -size 9")
        self.VFX1Button.configure(foreground="#000000")
        self.VFX1Button.configure(highlightbackground="#d9d9d9")
        self.VFX1Button.configure(highlightcolor="#000000")
        self.VFX1Button.configure(text='''Èü≥ÊïàÁáà''')
        self.VFX1Button_tooltip = \
        ToolTip(self.VFX1Button, '''The voice of Á¥≤(„Ñí„Ñß„ÑùÀã)ÊòüÁáà in a book!''')

        self.VFX4Button = tk.Button(self.EwEnch)
        self.VFX4Button.place(relx=0.771, rely=0.34, height=26, width=47
                , bordermode='ignore')
        self.VFX4Button.configure(activebackground="#d9d9d9")
        self.VFX4Button.configure(activeforeground="black")
        self.VFX4Button.configure(background="#d9d9d9")
        self.VFX4Button.configure(command=lambda: waveTicket_support.addEnch(self.VFX4Button))
        self.VFX4Button.configure(disabledforeground="#a3a3a3")
        self.VFX4Button.configure(font="-family {Segoe UI} -size 9")
        self.VFX4Button.configure(foreground="#000000")
        self.VFX4Button.configure(highlightbackground="#d9d9d9")
        self.VFX4Button.configure(highlightcolor="#000000")
        self.VFX4Button.configure(text='''Èü≥ÊïàËëµ''')
        self.VFX4Button_tooltip = \
        ToolTip(self.VFX4Button, '''The voice of Áê¥ËëâËëµ in a book!''')

        self.VFX2Button = tk.Button(self.EwEnch)
        self.VFX2Button.place(relx=0.232, rely=0.34, height=26, width=47
                , bordermode='ignore')
        self.VFX2Button.configure(activebackground="#d9d9d9")
        self.VFX2Button.configure(activeforeground="black")
        self.VFX2Button.configure(background="#d9d9d9")
        self.VFX2Button.configure(command=lambda: waveTicket_support.addEnch(self.VFX2Button))
        self.VFX2Button.configure(disabledforeground="#a3a3a3")
        self.VFX2Button.configure(font="-family {Segoe UI} -size 9")
        self.VFX2Button.configure(foreground="#000000")
        self.VFX2Button.configure(highlightbackground="#d9d9d9")
        self.VFX2Button.configure(highlightcolor="#000000")
        self.VFX2Button.configure(text='''Èü≥ÊïàÁ∑£''')
        self.VFX2Button_tooltip = \
        ToolTip(self.VFX2Button, '''The voice of ÁµêÊúàÁ∑£ in a book!''')

        self.VFX3Button = tk.Button(self.EwEnch)
        self.VFX3Button.place(relx=0.43, rely=0.34, height=26, width=87
                , bordermode='ignore')
        self.VFX3Button.configure(activebackground="#d9d9d9")
        self.VFX3Button.configure(activeforeground="black")
        self.VFX3Button.configure(background="#d9d9d9")
        self.VFX3Button.configure(command=lambda: waveTicket_support.addEnch(self.VFX3Button))
        self.VFX3Button.configure(disabledforeground="#a3a3a3")
        self.VFX3Button.configure(font="-family {Segoe UI} -size 9")
        self.VFX3Button.configure(foreground="#000000")
        self.VFX3Button.configure(highlightbackground="#d9d9d9")
        self.VFX3Button.configure(highlightcolor="#000000")
        self.VFX3Button.configure(text='''Èü≥ÊïàËåú(„Ñë„Ñß„Ñ¢Àã)''')
        self.VFX3Button_tooltip = \
        ToolTip(self.VFX3Button, '''The voice of Áê¥ËëâËåú(„Ñë„Ñß„Ñ¢Àã) in a book!''')

        self.BruhEnch = tk.LabelFrame(self.WaveMsg)
        self.BruhEnch.place(relx=0.533, rely=0.521, relheight=0.141
                , relwidth=0.452, bordermode='ignore')
        self.BruhEnch.configure(relief='sunken')
        self.BruhEnch.configure(font="-family {Segoe UI} -size 9")
        self.BruhEnch.configure(foreground="#000000")
        self.BruhEnch.configure(relief="sunken")
        self.BruhEnch.configure(text='''Bruhüò©''')
        self.BruhEnch.configure(background="#d9d9d9")
        self.BruhEnch.configure(highlightbackground="#d9d9d9")
        self.BruhEnch.configure(highlightcolor="#000000")

        self.FloatieButton = tk.Button(self.BruhEnch)
        self.FloatieButton.place(relx=0.217, rely=0.34, height=26, width=40
                , bordermode='ignore')
        self.FloatieButton.configure(activebackground="#d9d9d9")
        self.FloatieButton.configure(activeforeground="black")
        self.FloatieButton.configure(background="#d9d9d9")
        self.FloatieButton.configure(command=lambda: waveTicket_support.addEnch(self.FloatieButton))
        self.FloatieButton.configure(disabledforeground="#a3a3a3")
        self.FloatieButton.configure(font="-family {Segoe UI} -size 9")
        self.FloatieButton.configure(foreground="#000000")
        self.FloatieButton.configure(highlightbackground="#d9d9d9")
        self.FloatieButton.configure(highlightcolor="#000000")
        self.FloatieButton.configure(text='''ÊµÆÂäõ''')
        self.FloatieButton_tooltip = \
        ToolTip(self.FloatieButton, '''You can make the tooltip of this red and I won't say a word against it''')

        self.FastWindButton = tk.Button(self.BruhEnch)
        self.FastWindButton.place(relx=0.035, rely=0.34, height=26, width=40
                , bordermode='ignore')
        self.FastWindButton.configure(activebackground="#d9d9d9")
        self.FastWindButton.configure(activeforeground="black")
        self.FastWindButton.configure(background="#d9d9d9")
        self.FastWindButton.configure(command=lambda: waveTicket_support.addEnch(self.FastWindButton))
        self.FastWindButton.configure(disabledforeground="#a3a3a3")
        self.FastWindButton.configure(font="-family {Segoe UI} -size 9")
        self.FastWindButton.configure(foreground="#000000")
        self.FastWindButton.configure(highlightbackground="#d9d9d9")
        self.FastWindButton.configure(highlightcolor="#000000")
        self.FastWindButton.configure(text='''ÁñæÈ¢®''')
        self.FastWindButton_tooltip = \
        ToolTip(self.FastWindButton, '''Actually somewhat useful but the supply vastly outpace the demand''')

        self.NimbleButton = tk.Button(self.BruhEnch)
        self.NimbleButton.place(relx=0.392, rely=0.34, height=26, width=40
                , bordermode='ignore')
        self.NimbleButton.configure(activebackground="#d9d9d9")
        self.NimbleButton.configure(activeforeground="black")
        self.NimbleButton.configure(background="#d9d9d9")
        self.NimbleButton.configure(command=lambda: waveTicket_support.addEnch(self.NimbleButton))
        self.NimbleButton.configure(disabledforeground="#a3a3a3")
        self.NimbleButton.configure(font="-family {Segoe UI} -size 9")
        self.NimbleButton.configure(foreground="#000000")
        self.NimbleButton.configure(highlightbackground="#d9d9d9")
        self.NimbleButton.configure(highlightcolor="#000000")
        self.NimbleButton.configure(text='''ÈùàÂ∑ß''')
        self.NimbleButton_tooltip = \
        ToolTip(self.NimbleButton, '''Actually somewhat useful but the supply vastly outpace the demand as well''')

        self.OreSmeltButton = tk.Button(self.BruhEnch)
        self.OreSmeltButton.place(relx=0.57, rely=0.34, height=26, width=60
                , bordermode='ignore')
        self.OreSmeltButton.configure(activebackground="#d9d9d9")
        self.OreSmeltButton.configure(activeforeground="black")
        self.OreSmeltButton.configure(background="#d9d9d9")
        self.OreSmeltButton.configure(command=lambda: waveTicket_support.addEnch(self.OreSmeltButton))
        self.OreSmeltButton.configure(disabledforeground="#a3a3a3")
        self.OreSmeltButton.configure(font="-family {Segoe UI} -size 9")
        self.OreSmeltButton.configure(foreground="#000000")
        self.OreSmeltButton.configure(highlightbackground="#d9d9d9")
        self.OreSmeltButton.configure(highlightcolor="#000000")
        self.OreSmeltButton.configure(text='''Á§¶Áü≥ÁÜîÁÖâ''')
        self.OreSmeltButton_tooltip = \
        ToolTip(self.OreSmeltButton, '''??? WHO EVEN WANTS THIS''')

        self.WindHitButton = tk.Button(self.BruhEnch)
        self.WindHitButton.place(relx=0.822, rely=0.34, height=26, width=40
                , bordermode='ignore')
        self.WindHitButton.configure(activebackground="#d9d9d9")
        self.WindHitButton.configure(activeforeground="black")
        self.WindHitButton.configure(background="#d9d9d9")
        self.WindHitButton.configure(command=lambda: waveTicket_support.addEnch(self.WindHitButton))
        self.WindHitButton.configure(disabledforeground="#a3a3a3")
        self.WindHitButton.configure(font="-family {Segoe UI} -size 9")
        self.WindHitButton.configure(foreground="#000000")
        self.WindHitButton.configure(highlightbackground="#d9d9d9")
        self.WindHitButton.configure(highlightcolor="#000000")
        self.WindHitButton.configure(text='''È¢®Êìä''')
        self.WindHitButton_tooltip = \
        ToolTip(self.WindHitButton, '''Pretty fun enchantment not gonna lie, \nbut fun ‚â† useful''')

        self.WaveCount = tk.Text(self.WaveMsg)
        self.WaveCount.place(relx=0.533, rely=0.873, relheight=0.056
                , relwidth=0.105, bordermode='ignore')
        self.WaveCount.configure(background="white")
        self.WaveCount.configure(font="TkTextFont")
        self.WaveCount.configure(foreground="black")
        self.WaveCount.configure(highlightbackground="#d9d9d9")
        self.WaveCount.configure(highlightcolor="#000000")
        self.WaveCount.configure(insertbackground="#000000")
        self.WaveCount.configure(selectbackground="#d9d9d9")
        self.WaveCount.configure(selectforeground="black")
        self.WaveCount.configure(wrap="word")
        self.WaveCount_tooltip = \
        ToolTip(self.WaveCount, '''The wave your doing''')

        self.Label3 = tk.Label(self.WaveMsg)
        self.Label3.place(relx=0.533, rely=0.817, height=21, width=77
                , bordermode='ignore')
        self.Label3.configure(activebackground="#d9d9d9")
        self.Label3.configure(activeforeground="black")
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(font="-family {Segoe UI} -size 9")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(highlightbackground="#d9d9d9")
        self.Label3.configure(highlightcolor="#000000")
        self.Label3.configure(text='''ÈÄ≤Ë°å‰∏≠Â†¥Ê¨°''')

        self.WaveEndMsgCopyButton = tk.Button(self.WaveMsg)
        self.WaveEndMsgCopyButton.place(relx=0.403, rely=0.206, height=26
                , width=57, bordermode='ignore')
        self.WaveEndMsgCopyButton.configure(activebackground="#d9d9d9")
        self.WaveEndMsgCopyButton.configure(activeforeground="black")
        self.WaveEndMsgCopyButton.configure(background="#cccccc")
        self.WaveEndMsgCopyButton.configure(command=waveTicket_support.WaveEndMsgCopy)
        self.WaveEndMsgCopyButton.configure(disabledforeground="#a3a3a3")
        self.WaveEndMsgCopyButton.configure(font="-family {Segoe UI} -size 9")
        self.WaveEndMsgCopyButton.configure(foreground="#000000")
        self.WaveEndMsgCopyButton.configure(highlightbackground="#d9d9d9")
        self.WaveEndMsgCopyButton.configure(highlightcolor="#000000")
        self.WaveEndMsgCopyButton.configure(text='''Ë§áË£ΩË®äÊÅØ''')
        self.WaveEndMsgCopyButton_tooltip = \
        ToolTip(self.WaveEndMsgCopyButton, '''ÊääÊµ™ÂñÆË≥áË®ä‰ª•ÊóÅÈÇäÁöÑÊ†ºÂºèË§áË£ΩÂà∞Ââ™Ë≤ºÁ∞ø‰∏ä''')

        self.WaveVideoTitleCopyButton = tk.Button(self.WaveMsg)
        self.WaveVideoTitleCopyButton.place(relx=0.403, rely=0.318, height=26
                , width=57, bordermode='ignore')
        self.WaveVideoTitleCopyButton.configure(activebackground="#d9d9d9")
        self.WaveVideoTitleCopyButton.configure(activeforeground="black")
        self.WaveVideoTitleCopyButton.configure(background="#cccccc")
        self.WaveVideoTitleCopyButton.configure(command=waveTicket_support.WaveVideoTitleCopy)
        self.WaveVideoTitleCopyButton.configure(disabledforeground="#a3a3a3")
        self.WaveVideoTitleCopyButton.configure(font="-family {Segoe UI} -size 9")
        self.WaveVideoTitleCopyButton.configure(foreground="#000000")
        self.WaveVideoTitleCopyButton.configure(highlightbackground="#d9d9d9")
        self.WaveVideoTitleCopyButton.configure(highlightcolor="#000000")
        self.WaveVideoTitleCopyButton.configure(text='''Ë§áË£ΩË®äÊÅØ''')
        self.WaveVideoTitleCopyButton_tooltip = \
        ToolTip(self.WaveVideoTitleCopyButton, '''ÊääÊµ™ÂñÆË≥áË®ä‰ª•ÊóÅÈÇäÁöÑÊ†ºÂºèË§áË£ΩÂà∞Ââ™Ë≤ºÁ∞ø‰∏ä''')

        self.WaveStartMsgCopyButton = tk.Button(self.WaveMsg)
        self.WaveStartMsgCopyButton.place(relx=0.403, rely=0.093, height=26
                , width=57, bordermode='ignore')
        self.WaveStartMsgCopyButton.configure(activebackground="#d9d9d9")
        self.WaveStartMsgCopyButton.configure(activeforeground="black")
        self.WaveStartMsgCopyButton.configure(background="#cccccc")
        self.WaveStartMsgCopyButton.configure(command=waveTicket_support.WaveStartMsgCopy)
        self.WaveStartMsgCopyButton.configure(disabledforeground="#a3a3a3")
        self.WaveStartMsgCopyButton.configure(font="-family {Segoe UI} -size 9")
        self.WaveStartMsgCopyButton.configure(foreground="#000000")
        self.WaveStartMsgCopyButton.configure(highlightbackground="#d9d9d9")
        self.WaveStartMsgCopyButton.configure(highlightcolor="#000000")
        self.WaveStartMsgCopyButton.configure(text='''Ë§áË£ΩË®äÊÅØ''')
        self.WaveStartMsgCopyButton_tooltip = \
        ToolTip(self.WaveStartMsgCopyButton, '''ÊääÊµ™ÂñÆË≥áË®ä‰ª•ÊóÅÈÇäÁöÑÊ†ºÂºèË§áË£ΩÂà∞Ââ™Ë≤ºÁ∞ø‰∏ä''')

        self.MehEnch = tk.LabelFrame(self.WaveMsg)
        self.MehEnch.place(relx=0.533, rely=0.211, relheight=0.31, relwidth=0.452
                , bordermode='ignore')
        self.MehEnch.configure(relief='sunken')
        self.MehEnch.configure(font="-family {Segoe UI} -size 9")
        self.MehEnch.configure(foreground="#000000")
        self.MehEnch.configure(relief="sunken")
        self.MehEnch.configure(text='''Mehüë®''')
        self.MehEnch.configure(background="#d9d9d9")
        self.MehEnch.configure(highlightbackground="#d9d9d9")
        self.MehEnch.configure(highlightcolor="#000000")

        self.SmartButton = tk.Button(self.MehEnch)
        self.SmartButton.place(relx=0.197, rely=0.182, height=26, width=40
                , bordermode='ignore')
        self.SmartButton.configure(activebackground="#d9d9d9")
        self.SmartButton.configure(activeforeground="black")
        self.SmartButton.configure(background="#d9d9d9")
        self.SmartButton.configure(command=lambda: waveTicket_support.addEnch(self.SmartButton))
        self.SmartButton.configure(disabledforeground="#a3a3a3")
        self.SmartButton.configure(font="-family {Segoe UI} -size 9")
        self.SmartButton.configure(foreground="#000000")
        self.SmartButton.configure(highlightbackground="#d9d9d9")
        self.SmartButton.configure(highlightcolor="#000000")
        self.SmartButton.configure(text='''Êô∫ÊÖß''')
        self.SmartButton_tooltip = \
        ToolTip(self.SmartButton, '''I think 60$ is under valued, but it would be so expensive to get a Smart V otherwise''')

        self.FrozenButton = tk.Button(self.MehEnch)
        self.FrozenButton.place(relx=0.357, rely=0.182, height=26, width=40
                , bordermode='ignore')
        self.FrozenButton.configure(activebackground="#d9d9d9")
        self.FrozenButton.configure(activeforeground="black")
        self.FrozenButton.configure(background="#d9d9d9")
        self.FrozenButton.configure(command=lambda: waveTicket_support.addEnch(self.FrozenButton))
        self.FrozenButton.configure(disabledforeground="#a3a3a3")
        self.FrozenButton.configure(font="-family {Segoe UI} -size 9")
        self.FrozenButton.configure(foreground="#000000")
        self.FrozenButton.configure(highlightbackground="#d9d9d9")
        self.FrozenButton.configure(highlightcolor="#000000")
        self.FrozenButton.configure(text='''ÂÜ∞Âáç''')
        self.FrozenButton_tooltip = \
        ToolTip(self.FrozenButton, '''Does this enchantment really matter?''')

        self.SpearButton = tk.Button(self.MehEnch)
        self.SpearButton.place(relx=0.519, rely=0.182, height=26, width=40
                , bordermode='ignore')
        self.SpearButton.configure(activebackground="#d9d9d9")
        self.SpearButton.configure(activeforeground="black")
        self.SpearButton.configure(background="#d9d9d9")
        self.SpearButton.configure(command=lambda: waveTicket_support.addEnch(self.SpearButton))
        self.SpearButton.configure(disabledforeground="#a3a3a3")
        self.SpearButton.configure(font="-family {Segoe UI} -size 9")
        self.SpearButton.configure(foreground="#000000")
        self.SpearButton.configure(highlightbackground="#d9d9d9")
        self.SpearButton.configure(highlightcolor="#000000")
        self.SpearButton.configure(text='''Èï∑Áüõ''')
        self.SpearButton_tooltip = \
        ToolTip(self.SpearButton, '''Now I can also have Reach!''')

        self.ExtendButton = tk.Button(self.MehEnch)
        self.ExtendButton.place(relx=0.682, rely=0.182, height=26, width=40
                , bordermode='ignore')
        self.ExtendButton.configure(activebackground="#d9d9d9")
        self.ExtendButton.configure(activeforeground="black")
        self.ExtendButton.configure(background="#d9d9d9")
        self.ExtendButton.configure(command=lambda: waveTicket_support.addEnch(self.ExtendButton))
        self.ExtendButton.configure(disabledforeground="#a3a3a3")
        self.ExtendButton.configure(font="-family {Segoe UI} -size 9")
        self.ExtendButton.configure(foreground="#000000")
        self.ExtendButton.configure(highlightbackground="#d9d9d9")
        self.ExtendButton.configure(highlightcolor="#000000")
        self.ExtendButton.configure(text='''Âª∂‰º∏''')
        self.ExtendButton_tooltip = \
        ToolTip(self.ExtendButton, '''Not sure if this is actually useful outside of bed mining, \nwould be a god enchantment if combind with magnet touch tho :pepepray:''')

        self.CritButton = tk.Button(self.MehEnch)
        self.CritButton.place(relx=0.035, rely=0.455, height=26, width=60
                , bordermode='ignore')
        self.CritButton.configure(activebackground="#d9d9d9")
        self.CritButton.configure(activeforeground="black")
        self.CritButton.configure(background="#d9d9d9")
        self.CritButton.configure(command=lambda: waveTicket_support.addEnch(self.ExtendButton))
        self.CritButton.configure(disabledforeground="#a3a3a3")
        self.CritButton.configure(font="-family {Segoe UI} -size 9")
        self.CritButton.configure(foreground="#000000")
        self.CritButton.configure(highlightbackground="#d9d9d9")
        self.CritButton.configure(highlightcolor="#000000")
        self.CritButton.configure(text='''ÁàÜÊìäÂèØËÉΩ''')
        self.CritButton_tooltip = \
        ToolTip(self.CritButton, '''Even my damage is depend on RNG now bruhhhh''')

        self.YummyButton = tk.Button(self.MehEnch)
        self.YummyButton.place(relx=0.268, rely=0.455, height=26, width=40
                , bordermode='ignore')
        self.YummyButton.configure(activebackground="#d9d9d9")
        self.YummyButton.configure(activeforeground="black")
        self.YummyButton.configure(background="#d9d9d9")
        self.YummyButton.configure(command=lambda: waveTicket_support.addEnch(self.YummyButton))
        self.YummyButton.configure(disabledforeground="#a3a3a3")
        self.YummyButton.configure(font="-family {Segoe UI} -size 9")
        self.YummyButton.configure(foreground="#000000")
        self.YummyButton.configure(highlightbackground="#d9d9d9")
        self.YummyButton.configure(highlightcolor="#000000")
        self.YummyButton.configure(text='''ÁæéÈ£ü''')
        self.YummyButton_tooltip = \
        ToolTip(self.YummyButton, '''This makes garrot a lot more 
convenient to use''')

        self.HealthyButton = tk.Button(self.MehEnch)
        self.HealthyButton.place(relx=0.43, rely=0.455, height=26, width=40
                , bordermode='ignore')
        self.HealthyButton.configure(activebackground="#d9d9d9")
        self.HealthyButton.configure(activeforeground="black")
        self.HealthyButton.configure(background="#d9d9d9")
        self.HealthyButton.configure(command=lambda: waveTicket_support.addEnch(self.HealthyButton))
        self.HealthyButton.configure(disabledforeground="#a3a3a3")
        self.HealthyButton.configure(font="-family {Segoe UI} -size 9")
        self.HealthyButton.configure(foreground="#000000")
        self.HealthyButton.configure(highlightbackground="#d9d9d9")
        self.HealthyButton.configure(highlightcolor="#000000")
        self.HealthyButton.configure(text='''ÂÅ•Â∫∑''')
        self.HealthyButton_tooltip = \
        ToolTip(self.HealthyButton, '''I wish this have V''')

        self.StubbronButton = tk.Button(self.MehEnch)
        self.StubbronButton.place(relx=0.592, rely=0.455, height=26, width=40
                , bordermode='ignore')
        self.StubbronButton.configure(activebackground="#d9d9d9")
        self.StubbronButton.configure(activeforeground="black")
        self.StubbronButton.configure(background="#d9d9d9")
        self.StubbronButton.configure(command=lambda: waveTicket_support.addEnch(self.StubbronButton))
        self.StubbronButton.configure(disabledforeground="#a3a3a3")
        self.StubbronButton.configure(font="-family {Segoe UI} -size 9")
        self.StubbronButton.configure(foreground="#000000")
        self.StubbronButton.configure(highlightbackground="#d9d9d9")
        self.StubbronButton.configure(highlightcolor="#000000")
        self.StubbronButton.configure(text='''ÂÄîÂº∑''')
        self.StubbronButton_tooltip = \
        ToolTip(self.StubbronButton, '''God damn it we are always low on this one''')

        self.MiniButton = tk.Button(self.MehEnch)
        self.MiniButton.place(relx=0.752, rely=0.455, height=26, width=55
                , bordermode='ignore')
        self.MiniButton.configure(activebackground="#d9d9d9")
        self.MiniButton.configure(activeforeground="black")
        self.MiniButton.configure(background="#d9d9d9")
        self.MiniButton.configure(command=lambda: waveTicket_support.addEnch(self.MiniButton))
        self.MiniButton.configure(disabledforeground="#a3a3a3")
        self.MiniButton.configure(font="-family {Segoe UI} -size 9")
        self.MiniButton.configure(foreground="#000000")
        self.MiniButton.configure(highlightbackground="#d9d9d9")
        self.MiniButton.configure(highlightcolor="#000000")
        self.MiniButton.configure(text='''Ëø∑‰Ω†Âåñ''')
        self.MiniButton_tooltip = \
        ToolTip(self.MiniButton, '''400$? That is definitely overpriced''')

        self.KBresButton = tk.Button(self.MehEnch)
        self.KBresButton.place(relx=0.035, rely=0.727, height=26, width=60
                , bordermode='ignore')
        self.KBresButton.configure(activebackground="#d9d9d9")
        self.KBresButton.configure(activeforeground="black")
        self.KBresButton.configure(background="#d9d9d9")
        self.KBresButton.configure(command=lambda: waveTicket_support.addEnch(self.KBresButton))
        self.KBresButton.configure(disabledforeground="#a3a3a3")
        self.KBresButton.configure(font="-family {Segoe UI} -size 9")
        self.KBresButton.configure(foreground="#000000")
        self.KBresButton.configure(highlightbackground="#d9d9d9")
        self.KBresButton.configure(highlightcolor="#000000")
        self.KBresButton.configure(text='''ÊìäÈÄÄ‰øùË≠∑''')
        self.KBresButton_tooltip = \
        ToolTip(self.KBresButton, '''The backbone of the SOB meta''')

        self.ExpSacButton = tk.Button(self.MehEnch)
        self.ExpSacButton.place(relx=0.268, rely=0.727, height=26, width=60
                , bordermode='ignore')
        self.ExpSacButton.configure(activebackground="#d9d9d9")
        self.ExpSacButton.configure(activeforeground="black")
        self.ExpSacButton.configure(background="#d9d9d9")
        self.ExpSacButton.configure(command=lambda: waveTicket_support.addEnch(self.ExpSacButton))
        self.ExpSacButton.configure(disabledforeground="#a3a3a3")
        self.ExpSacButton.configure(font="-family {Segoe UI} -size 9")
        self.ExpSacButton.configure(foreground="#000000")
        self.ExpSacButton.configure(highlightbackground="#d9d9d9")
        self.ExpSacButton.configure(highlightcolor="#000000")
        self.ExpSacButton.configure(text='''ÁçªÁ•≠Á∂ìÈ©ó''')
        self.ExpSacButton_tooltip = \
        ToolTip(self.ExpSacButton, '''Free damage resistence! (until u die)''')

        self.SteadySneakButton = tk.Button(self.MehEnch)
        self.SteadySneakButton.place(relx=0.503, rely=0.727, height=26, width=60
                , bordermode='ignore')
        self.SteadySneakButton.configure(activebackground="#d9d9d9")
        self.SteadySneakButton.configure(activeforeground="black")
        self.SteadySneakButton.configure(background="#d9d9d9")
        self.SteadySneakButton.configure(command=lambda: waveTicket_support.addEnch(self.SteadySneakButton))
        self.SteadySneakButton.configure(disabledforeground="#a3a3a3")
        self.SteadySneakButton.configure(font="-family {Segoe UI} -size 9")
        self.SteadySneakButton.configure(foreground="#000000")
        self.SteadySneakButton.configure(highlightbackground="#d9d9d9")
        self.SteadySneakButton.configure(highlightcolor="#000000")
        self.SteadySneakButton.configure(text='''Á©©ÈáçÊΩõË°å''')
        self.SteadySneakButton_tooltip = \
        ToolTip(self.SteadySneakButton, '''Kinda hate this enchantment sometimes''')

        self.AntiBreakButton = tk.Button(self.MehEnch)
        self.AntiBreakButton.place(relx=0.736, rely=0.727, height=26, width=60
                , bordermode='ignore')
        self.AntiBreakButton.configure(activebackground="#d9d9d9")
        self.AntiBreakButton.configure(activeforeground="black")
        self.AntiBreakButton.configure(background="#d9d9d9")
        self.AntiBreakButton.configure(command=lambda: waveTicket_support.addEnch(self.AntiBreakButton))
        self.AntiBreakButton.configure(disabledforeground="#a3a3a3")
        self.AntiBreakButton.configure(font="-family {Segoe UI} -size 9")
        self.AntiBreakButton.configure(foreground="#000000")
        self.AntiBreakButton.configure(highlightbackground="#d9d9d9")
        self.AntiBreakButton.configure(highlightcolor="#000000")
        self.AntiBreakButton.configure(text='''ÊêçÊØÄÊïëÊè¥''')
        self.AntiBreakButton_tooltip = \
        ToolTip(self.AntiBreakButton, '''I think this is actually useful, saves me a lot when Im not being careful''')

        self.BloodSuckingButton = tk.Button(self.MehEnch)
        self.BloodSuckingButton.place(relx=0.035, rely=0.182, height=26, width=40
                , bordermode='ignore')
        self.BloodSuckingButton.configure(activebackground="#d9d9d9")
        self.BloodSuckingButton.configure(activeforeground="black")
        self.BloodSuckingButton.configure(background="#d9d9d9")
        self.BloodSuckingButton.configure(command=lambda: waveTicket_support.addEnch(self.BloodSuckingButton))
        self.BloodSuckingButton.configure(disabledforeground="#a3a3a3")
        self.BloodSuckingButton.configure(font="-family {Segoe UI} -size 9")
        self.BloodSuckingButton.configure(foreground="#000000")
        self.BloodSuckingButton.configure(highlightbackground="#d9d9d9")
        self.BloodSuckingButton.configure(highlightcolor="#000000")
        self.BloodSuckingButton.configure(text='''Âê∏Ë°Ä''')
        self.BloodSuckingButton_tooltip = \
        ToolTip(self.BloodSuckingButton, '''Like other said, everyone think this book sucked until they used it''')

        self.PogEnch = tk.LabelFrame(self.WaveMsg)
        self.PogEnch.place(relx=0.533, rely=0.07, relheight=0.141, relwidth=0.452
                , bordermode='ignore')
        self.PogEnch.configure(relief='sunken')
        self.PogEnch.configure(font="-family {Segoe UI} -size 9")
        self.PogEnch.configure(foreground="#000000")
        self.PogEnch.configure(relief="sunken")
        self.PogEnch.configure(text='''Pogüî•''')
        self.PogEnch.configure(background="#d9d9d9")
        self.PogEnch.configure(highlightbackground="#d9d9d9")
        self.PogEnch.configure(highlightcolor="#000000")

        self.MendButton = tk.Button(self.PogEnch)
        self.MendButton.place(relx=0.035, rely=0.4, height=26, width=60
                , bordermode='ignore')
        self.MendButton.configure(activebackground="#d9d9d9")
        self.MendButton.configure(activeforeground="black")
        self.MendButton.configure(background="#d9d9d9")
        self.MendButton.configure(command=lambda: waveTicket_support.addEnch(self.MendButton))
        self.MendButton.configure(cursor="draped_box")
        self.MendButton.configure(disabledforeground="#a3a3a3")
        self.MendButton.configure(font="-family {Segoe UI} -size 9")
        self.MendButton.configure(foreground="#000000")
        self.MendButton.configure(highlightbackground="#d9d9d9")
        self.MendButton.configure(highlightcolor="#000000")
        self.MendButton.configure(text='''Ëá™Âãï‰øÆË£ú''')
        self.MendButton_tooltip = \
        ToolTip(self.MendButton, '''WHY YOU WANT MODDED MENDING ON YOUR SWORD?
IS NOT GOOD ENOUGH AS PROCURED FROM MOJANG STUDIO GAMES?
YOU THINK NEEDS IMPROVEMENT?
THEN MAYBE YOU FIND JOB WITH COMPANY OF SWEDEN! YOU HAVE DRINKS WITH MARKUS ALEXEJ PERSSON,
TRADE STORY OF MANY GAMES DESIGNED AND DETAILS OF SCHOOL FOR WEAPONMAKING!

OR MAYBE YOU NOT DO THIS. PROBABLY IS BECAUSE YOU NEVER MAKE GAME IN WHOLE LIFE.
YOU LOOK AT FINE MINECRAFT ITEMS, THINK IT NEED CRAZY SHIT STICK ON ALL SIDES OF WEAPON.
YOU HAVE DISEASE OF AMERICAN CAPITALIST,
CHANGE THING THAT IS FINE FOR NO REASON EXCEPT TO LOOK DIFFERENT FROM COMRADE.
YOU PUT CHEAP BOOK OF VAMPIRE SLAVE FACTORY ON ONE SIDE, YOU PUT BAD VERSION OF FIRE OF ASPECT ON OTHER SIDE,
YOU PUT THE BRAIN POWER ON BOTTOM SO YOU ARE LIKE AMERICAN SCIENCE GUY NEIL TYSON.
MAYBE YOU PUT SEX DILDO ON TOP TO FUCK YOURSELF IN ASSHOLE FOR MAKING SHAMEFUL TRAVESTY OF WEAPON OF MARKUS ALEXEJ PERSSON, NO?

VANILLA IS FINE.
YOU FUCK IT,
IT ONLY GET EXPENSIVE AND YOU STILL DIE WHEN PING HIGH.
GO TO HYPIXEL SKYWAR, PRACTICE WITH MANY MONTH OF YOUR LIFE.
THEN YOU NOT NEED DUMB SHIT PUT ON SIDE OF WEAPON.''')

        self.Label3_1 = tk.Label(self.WaveMsg)
        self.Label3_1.place(relx=0.016, rely=0.056, height=16, width=113
                , bordermode='ignore')
        self.Label3_1.configure(activebackground="#d9d9d9")
        self.Label3_1.configure(activeforeground="black")
        self.Label3_1.configure(anchor='w')
        self.Label3_1.configure(background="#d9d9d9")
        self.Label3_1.configure(compound='left')
        self.Label3_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1.configure(font="-family {Segoe UI} -size 9")
        self.Label3_1.configure(foreground="#000000")
        self.Label3_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1.configure(highlightcolor="#000000")
        self.Label3_1.configure(relief="ridge")
        self.Label3_1.configure(text='''Êµ™ÊΩÆËµ∑ÂßãË®äÊÅØÊ†ºÂºè''')
        self.Label3_1_tooltip = \
        ToolTip(self.Label3_1, '''%C = Áï∂ÂâçÊ≥¢Êï∏, %Dif = Êµ™ÊΩÆÈõ£Â∫¶, %Mode = Ë®ÇÂñÆÊ®°Âºè, %B = Ë≤∑ÂÆ∂ID
%Mon = Êúà‰ªΩ, %D = Êó•Êúü, %H = Â∞èÊôÇ, %Min = ÂàÜÈêò
ÊñáÂ≠óÂ§™Èï∑ÂèØ‰ª•‰ΩøÁî®ÊªæËº™Êü•ÁúãÂÖ∂‰ªñË°å
ÊèõË°åÁ¨¶ËôüÊúÉË¢´Áï∂Á©∫Ê†º, ÊääÊ¨Ñ‰ΩçÊ∏ÖÁ©∫‰æÜÂõûÂæ©È†êË®≠ÂÄº
(Ê¨Ñ‰ΩçÂè™ÊúâÂú®‰Ω†ÂèñÊ∂àËÅöÁÑ¶ÊôÇÊúÉË¢´ÂÑ≤Â≠òÂà∞Ë®≠ÂÆö/ÂõûÂæ©È†êË®≠)''')

        self.WaveStartMsgFormat = tk.Text(self.WaveMsg)
        self.WaveStartMsgFormat.place(relx=0.016, rely=0.099, relheight=0.056
                , relwidth=0.382, bordermode='ignore')
        self.WaveStartMsgFormat.configure(background="white")
        self.WaveStartMsgFormat.configure(font="TkTextFont")
        self.WaveStartMsgFormat.configure(foreground="#000000")
        self.WaveStartMsgFormat.configure(highlightbackground="#d9d9d9")
        self.WaveStartMsgFormat.configure(highlightcolor="#000000")
        self.WaveStartMsgFormat.configure(insertbackground="#000000")
        self.WaveStartMsgFormat.configure(selectbackground="#d9d9d9")
        self.WaveStartMsgFormat.configure(selectforeground="black")
        self.WaveStartMsgFormat.configure(wrap="word")
        self.WaveStartMsgFormat_tooltip = \
        ToolTip(self.WaveStartMsgFormat, '''%C = Áï∂ÂâçÊ≥¢Êï∏, %Dif = Êµ™ÊΩÆÈõ£Â∫¶, %Mode = Ë®ÇÂñÆÊ®°Âºè, %B = Ë≤∑ÂÆ∂ID
%Mon = Êúà‰ªΩ, %D = Êó•Êúü, %H = Â∞èÊôÇ, %Min = ÂàÜÈêò
ÊñáÂ≠óÂ§™Èï∑ÂèØ‰ª•‰ΩøÁî®ÊªæËº™Êü•ÁúãÂÖ∂‰ªñË°å
ÊèõË°åÁ¨¶ËôüÊúÉË¢´Áï∂Á©∫Ê†º, ÊääÊ¨Ñ‰ΩçÊ∏ÖÁ©∫‰æÜÂõûÂæ©È†êË®≠ÂÄº
(Ê¨Ñ‰ΩçÂè™ÊúâÂú®‰Ω†ÂèñÊ∂àËÅöÁÑ¶ÊôÇÊúÉË¢´ÂÑ≤Â≠òÂà∞Ë®≠ÂÆö/ÂõûÂæ©È†êË®≠)''')

        self.Label3_1_1 = tk.Label(self.WaveMsg)
        self.Label3_1_1.place(relx=0.016, rely=0.169, height=16, width=113
                , bordermode='ignore')
        self.Label3_1_1.configure(activebackground="#d9d9d9")
        self.Label3_1_1.configure(activeforeground="black")
        self.Label3_1_1.configure(anchor='w')
        self.Label3_1_1.configure(background="#d9d9d9")
        self.Label3_1_1.configure(compound='left')
        self.Label3_1_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1_1.configure(font="-family {Segoe UI} -size 9")
        self.Label3_1_1.configure(foreground="#000000")
        self.Label3_1_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1_1.configure(highlightcolor="#000000")
        self.Label3_1_1.configure(relief="ridge")
        self.Label3_1_1.configure(text='''Êµ™ÊΩÆÁµêÊùüË®äÊÅØÊ†ºÂºè''')
        self.Label3_1_1_tooltip = \
        ToolTip(self.Label3_1_1, '''%C = Áï∂ÂâçÊ≥¢Êï∏, %Dif = Êµ™ÊΩÆÈõ£Â∫¶, %Mode = Ë®ÇÂñÆÊ®°Âºè, %B = Ë≤∑ÂÆ∂ID
%Mon = Êúà‰ªΩ, %D = Êó•Êúü, %H = Â∞èÊôÇ, %Min = ÂàÜÈêò
ÊñáÂ≠óÂ§™Èï∑ÂèØ‰ª•‰ΩøÁî®ÊªæËº™Êü•ÁúãÂÖ∂‰ªñË°å
ÊèõË°åÁ¨¶ËôüÊúÉË¢´Áï∂Á©∫Ê†º, ÊääÊ¨Ñ‰ΩçÊ∏ÖÁ©∫‰æÜÂõûÂæ©È†êË®≠ÂÄº
(Ê¨Ñ‰ΩçÂè™ÊúâÂú®‰Ω†ÂèñÊ∂àËÅöÁÑ¶ÊôÇÊúÉË¢´ÂÑ≤Â≠òÂà∞Ë®≠ÂÆö/ÂõûÂæ©È†êË®≠)''')

        self.WaveEndMsgFormat = tk.Text(self.WaveMsg)
        self.WaveEndMsgFormat.place(relx=0.016, rely=0.211, relheight=0.056
                , relwidth=0.382, bordermode='ignore')
        self.WaveEndMsgFormat.configure(background="white")
        self.WaveEndMsgFormat.configure(font="TkTextFont")
        self.WaveEndMsgFormat.configure(foreground="#000000")
        self.WaveEndMsgFormat.configure(highlightbackground="#d9d9d9")
        self.WaveEndMsgFormat.configure(highlightcolor="#000000")
        self.WaveEndMsgFormat.configure(insertbackground="#000000")
        self.WaveEndMsgFormat.configure(selectbackground="#d9d9d9")
        self.WaveEndMsgFormat.configure(selectforeground="black")
        self.WaveEndMsgFormat.configure(wrap="word")
        self.WaveEndMsgFormat_tooltip = \
        ToolTip(self.WaveEndMsgFormat, '''%C = Áï∂ÂâçÊ≥¢Êï∏, %Dif = Êµ™ÊΩÆÈõ£Â∫¶, %Mode = Ë®ÇÂñÆÊ®°Âºè, %B = Ë≤∑ÂÆ∂ID
%Mon = Êúà‰ªΩ, %D = Êó•Êúü, %H = Â∞èÊôÇ, %Min = ÂàÜÈêò
ÊñáÂ≠óÂ§™Èï∑ÂèØ‰ª•‰ΩøÁî®ÊªæËº™Êü•ÁúãÂÖ∂‰ªñË°å
ÊèõË°åÁ¨¶ËôüÊúÉË¢´Áï∂Á©∫Ê†º, ÊääÊ¨Ñ‰ΩçÊ∏ÖÁ©∫‰æÜÂõûÂæ©È†êË®≠ÂÄº
(Ê¨Ñ‰ΩçÂè™ÊúâÂú®‰Ω†ÂèñÊ∂àËÅöÁÑ¶ÊôÇÊúÉË¢´ÂÑ≤Â≠òÂà∞Ë®≠ÂÆö/ÂõûÂæ©È†êË®≠)''')

        self.Label3_1_1_1 = tk.Label(self.WaveMsg)
        self.Label3_1_1_1.place(relx=0.016, rely=0.282, height=16, width=113
                , bordermode='ignore')
        self.Label3_1_1_1.configure(activebackground="#d9d9d9")
        self.Label3_1_1_1.configure(activeforeground="black")
        self.Label3_1_1_1.configure(anchor='w')
        self.Label3_1_1_1.configure(background="#d9d9d9")
        self.Label3_1_1_1.configure(compound='left')
        self.Label3_1_1_1.configure(disabledforeground="#a3a3a3")
        self.Label3_1_1_1.configure(font="-family {Segoe UI} -size 9")
        self.Label3_1_1_1.configure(foreground="#000000")
        self.Label3_1_1_1.configure(highlightbackground="#d9d9d9")
        self.Label3_1_1_1.configure(highlightcolor="#000000")
        self.Label3_1_1_1.configure(relief="ridge")
        self.Label3_1_1_1.configure(text='''Êµ™ÊΩÆÂΩ±ÁâáÊ®ôÈ°åÊ†ºÂºè''')
        self.Label3_1_1_1_tooltip = \
        ToolTip(self.Label3_1_1_1, '''%C = Áï∂ÂâçÊ≥¢Êï∏, %Dif = Êµ™ÊΩÆÈõ£Â∫¶, %Mode = Ë®ÇÂñÆÊ®°Âºè, %B = Ë≤∑ÂÆ∂ID
%Mon = Êúà‰ªΩ, %D = Êó•Êúü, %H = Â∞èÊôÇ, %Min = ÂàÜÈêò
ÊñáÂ≠óÂ§™Èï∑ÂèØ‰ª•‰ΩøÁî®ÊªæËº™Êü•ÁúãÂÖ∂‰ªñË°å
ÊèõË°åÁ¨¶ËôüÊúÉË¢´Áï∂Á©∫Ê†º, ÊääÊ¨Ñ‰ΩçÊ∏ÖÁ©∫‰æÜÂõûÂæ©È†êË®≠ÂÄº
(Ê¨Ñ‰ΩçÂè™ÊúâÂú®‰Ω†ÂèñÊ∂àËÅöÁÑ¶ÊôÇÊúÉË¢´ÂÑ≤Â≠òÂà∞Ë®≠ÂÆö/ÂõûÂæ©È†êË®≠)''')

        self.WaveVideoTitleFormat = tk.Text(self.WaveMsg)
        self.WaveVideoTitleFormat.place(relx=0.016, rely=0.324, relheight=0.056
                , relwidth=0.382, bordermode='ignore')
        self.WaveVideoTitleFormat.configure(background="white")
        self.WaveVideoTitleFormat.configure(font="TkTextFont")
        self.WaveVideoTitleFormat.configure(foreground="#000000")
        self.WaveVideoTitleFormat.configure(highlightbackground="#d9d9d9")
        self.WaveVideoTitleFormat.configure(highlightcolor="#000000")
        self.WaveVideoTitleFormat.configure(insertbackground="#000000")
        self.WaveVideoTitleFormat.configure(selectbackground="#d9d9d9")
        self.WaveVideoTitleFormat.configure(selectforeground="black")
        self.WaveVideoTitleFormat.configure(wrap="word")
        self.WaveVideoTitleFormat_tooltip = \
        ToolTip(self.WaveVideoTitleFormat, '''%C = Áï∂ÂâçÊ≥¢Êï∏, %Dif = Êµ™ÊΩÆÈõ£Â∫¶, %Mode = Ë®ÇÂñÆÊ®°Âºè, %B = Ë≤∑ÂÆ∂ID
%Mon = Êúà‰ªΩ, %D = Êó•Êúü, %H = Â∞èÊôÇ, %Min = ÂàÜÈêò
ÊñáÂ≠óÂ§™Èï∑ÂèØ‰ª•‰ΩøÁî®ÊªæËº™Êü•ÁúãÂÖ∂‰ªñË°å
ÊèõË°åÁ¨¶ËôüÊúÉË¢´Áï∂Á©∫Ê†º, ÊääÊ¨Ñ‰ΩçÊ∏ÖÁ©∫‰æÜÂõûÂæ©È†êË®≠ÂÄº
(Ê¨Ñ‰ΩçÂè™ÊúâÂú®‰Ω†ÂèñÊ∂àËÅöÁÑ¶ÊôÇÊúÉË¢´ÂÑ≤Â≠òÂà∞Ë®≠ÂÆö/ÂõûÂæ©È†êË®≠)''')

        self.WaveRequestFinishMsgTextElement = tk.Text(self.WaveMsg)
        self.WaveRequestFinishMsgTextElement.place(relx=0.016, rely=0.507
                , relheight=0.459, relwidth=0.501, bordermode='ignore')
        self.WaveRequestFinishMsgTextElement.configure(background="white")
        self.WaveRequestFinishMsgTextElement.configure(borderwidth="3")
        self.WaveRequestFinishMsgTextElement.configure(font="TkTextFont")
        self.WaveRequestFinishMsgTextElement.configure(foreground="#000000")
        self.WaveRequestFinishMsgTextElement.configure(highlightbackground="#d9d9d9")
        self.WaveRequestFinishMsgTextElement.configure(highlightcolor="#000000")
        self.WaveRequestFinishMsgTextElement.configure(insertbackground="#000000")
        self.WaveRequestFinishMsgTextElement.configure(selectbackground="#d9d9d9")
        self.WaveRequestFinishMsgTextElement.configure(selectforeground="black")
        self.WaveRequestFinishMsgTextElement.configure(wrap="word")
        self.WaveRequestFinishMsgTextElement_tooltip = \
        ToolTip(self.WaveRequestFinishMsgTextElement, '''‰Ω†ÁöÑÁµêÂñÆË®äÊÅØÈï∑ÈÄôÊ®£üí•''')

        self.WaveCounterResetButton_1 = tk.Button(self.WaveMsg)
        self.WaveCounterResetButton_1.place(relx=0.539, rely=0.938, height=16
                , width=65, bordermode='ignore')
        self.WaveCounterResetButton_1.configure(activebackground="#d9d9d9")
        self.WaveCounterResetButton_1.configure(activeforeground="black")
        self.WaveCounterResetButton_1.configure(background="#d9d9d9")
        self.WaveCounterResetButton_1.configure(command=waveTicket_support.WaveCounterReset)
        self.WaveCounterResetButton_1.configure(disabledforeground="#a3a3a3")
        self.WaveCounterResetButton_1.configure(font="-family {Segoe UI} -size 9")
        self.WaveCounterResetButton_1.configure(foreground="#000000")
        self.WaveCounterResetButton_1.configure(highlightbackground="#d9d9d9")
        self.WaveCounterResetButton_1.configure(highlightcolor="#000000")
        self.WaveCounterResetButton_1.configure(text='''ÈáçË£ΩÂ†¥Ê¨°''')
        self.WaveCounterResetButton_1_tooltip = \
        ToolTip(self.WaveCounterResetButton_1, '''ÈÄ≤Ë°å‰∏≠Â†¥Ê¨°=1''')

        self.WaveCounterPlusButton = tk.Button(self.WaveMsg)
        self.WaveCounterPlusButton.place(relx=0.646, rely=0.901, height=31
                , width=52, bordermode='ignore')
        self.WaveCounterPlusButton.configure(activebackground="#d9d9d9")
        self.WaveCounterPlusButton.configure(activeforeground="black")
        self.WaveCounterPlusButton.configure(background="#cfcfcf")
        self.WaveCounterPlusButton.configure(command=waveTicket_support.WaveCounterPlus)
        self.WaveCounterPlusButton.configure(disabledforeground="#a3a3a3")
        self.WaveCounterPlusButton.configure(font="-family {Segoe UI} -size 9")
        self.WaveCounterPlusButton.configure(foreground="#000000")
        self.WaveCounterPlusButton.configure(highlightbackground="#d9d9d9")
        self.WaveCounterPlusButton.configure(highlightcolor="#000000")
        self.WaveCounterPlusButton.configure(text='''‰∏ã‰∏ÄÂ†¥''')
        self.WaveCounterPlusButton_tooltip = \
        ToolTip(self.WaveCounterPlusButton, '''ÈÄ≤Ë°å‰∏≠Â†¥Ê¨°+=1''')

        self.WaveCounterMinusButton_1 = tk.Button(self.WaveMsg)
        self.WaveCounterMinusButton_1.place(relx=0.646, rely=0.817, height=31
                , width=52, bordermode='ignore')
        self.WaveCounterMinusButton_1.configure(activebackground="#d9d9d9")
        self.WaveCounterMinusButton_1.configure(activeforeground="black")
        self.WaveCounterMinusButton_1.configure(background="#cfcfcf")
        self.WaveCounterMinusButton_1.configure(command=waveTicket_support.WaveCounterMinus)
        self.WaveCounterMinusButton_1.configure(disabledforeground="#a3a3a3")
        self.WaveCounterMinusButton_1.configure(font="-family {Segoe UI} -size 9")
        self.WaveCounterMinusButton_1.configure(foreground="#000000")
        self.WaveCounterMinusButton_1.configure(highlightbackground="#d9d9d9")
        self.WaveCounterMinusButton_1.configure(highlightcolor="#000000")
        self.WaveCounterMinusButton_1.configure(text='''‰∏ä‰∏ÄÂ†¥''')
        self.WaveCounterMinusButton_1_tooltip = \
        ToolTip(self.WaveCounterMinusButton_1, '''ÈÄ≤Ë°å‰∏≠Â†¥Ê¨°-=1''')

        self.RemoveEnchButton = tk.Button(self.WaveMsg)
        self.RemoveEnchButton.place(relx=0.735, rely=0.817, height=31, width=57
                , bordermode='ignore')
        self.RemoveEnchButton.configure(activebackground="#d9d9d9")
        self.RemoveEnchButton.configure(activeforeground="black")
        self.RemoveEnchButton.configure(background="#cfcfcf")
        self.RemoveEnchButton.configure(command=waveTicket_support.RemoveEnch)
        self.RemoveEnchButton.configure(disabledforeground="#a3a3a3")
        self.RemoveEnchButton.configure(font="-family {Segoe UI} -size 9")
        self.RemoveEnchButton.configure(foreground="#000000")
        self.RemoveEnchButton.configure(highlightbackground="#d9d9d9")
        self.RemoveEnchButton.configure(highlightcolor="#000000")
        self.RemoveEnchButton.configure(text='''Âà™Èô§ÈôÑÈ≠î''')
        self.RemoveEnchButton_tooltip = \
        ToolTip(self.RemoveEnchButton, '''Âà™Èô§ÈÇ£Ë°åÊúÄÂæåÈù¢ÁöÑÈôÑÈ≠î''')

        self.WaveRequestFinishMsgButton = tk.Button(self.WaveMsg)
        self.WaveRequestFinishMsgButton.place(relx=0.735, rely=0.901, height=31
                , width=57, bordermode='ignore')
        self.WaveRequestFinishMsgButton.configure(activebackground="#d9d9d9")
        self.WaveRequestFinishMsgButton.configure(activeforeground="black")
        self.WaveRequestFinishMsgButton.configure(background="#cfcfcf")
        self.WaveRequestFinishMsgButton.configure(command=waveTicket_support.ResetWaveRequestFinishMsg)
        self.WaveRequestFinishMsgButton.configure(disabledforeground="#a3a3a3")
        self.WaveRequestFinishMsgButton.configure(font="-family {Segoe UI} -size 9")
        self.WaveRequestFinishMsgButton.configure(foreground="#000000")
        self.WaveRequestFinishMsgButton.configure(highlightbackground="#d9d9d9")
        self.WaveRequestFinishMsgButton.configure(highlightcolor="#000000")
        self.WaveRequestFinishMsgButton.configure(text='''ÈáçË£ΩË®äÊÅØ''')
        self.WaveRequestFinishMsgButton_tooltip = \
        ToolTip(self.WaveRequestFinishMsgButton, '''ÈáçË£ΩÊï¥ÂÄãÁµêÂñÆË®äÊÅØ''')

        self.WaveRequestFinishMsgCopyButton = tk.Button(self.WaveMsg)
        self.WaveRequestFinishMsgCopyButton.place(relx=0.831, rely=0.817
                , height=61, width=97, bordermode='ignore')
        self.WaveRequestFinishMsgCopyButton.configure(activebackground="#d9d9d9")
        self.WaveRequestFinishMsgCopyButton.configure(activeforeground="black")
        self.WaveRequestFinishMsgCopyButton.configure(background="#cccccc")
        self.WaveRequestFinishMsgCopyButton.configure(command=waveTicket_support.WaveRequestFinishMsgCopy)
        self.WaveRequestFinishMsgCopyButton.configure(disabledforeground="#a3a3a3")
        self.WaveRequestFinishMsgCopyButton.configure(font="-family {Segoe UI} -size 9")
        self.WaveRequestFinishMsgCopyButton.configure(foreground="#000000")
        self.WaveRequestFinishMsgCopyButton.configure(highlightbackground="#d9d9d9")
        self.WaveRequestFinishMsgCopyButton.configure(highlightcolor="#000000")
        self.WaveRequestFinishMsgCopyButton.configure(text='''Ë§áË£ΩË®äÊÅØ''')
        self.WaveRequestFinishMsgCopyButton_tooltip = \
        ToolTip(self.WaveRequestFinishMsgCopyButton, '''ÊääÁµêÂñÆË®äÊÅØË§áË£ΩÂà∞‰Ω†ÁöÑÂâ™Ë≤ºÁ∞øË£°''')

        self.WaveInfo = tk.LabelFrame(self.top)
        self.WaveInfo.place(relx=0.35, rely=0.017, relheight=0.357
                , relwidth=0.628)
        self.WaveInfo.configure(relief='groove')
        self.WaveInfo.configure(font="-family {Segoe UI} -size 9")
        self.WaveInfo.configure(foreground="#000000")
        self.WaveInfo.configure(text='''Êµ™ÂñÆË≥áË®ä''')
        self.WaveInfo.configure(background="#d9d9d9")
        self.WaveInfo.configure(highlightbackground="#d9d9d9")
        self.WaveInfo.configure(highlightcolor="#000000")

        self.Label2_1_1_1_1 = tk.Label(self.WaveInfo)
        self.Label2_1_1_1_1.place(relx=0.263, rely=0.685, height=22, width=72
                , bordermode='ignore')
        self.Label2_1_1_1_1.configure(activebackground="#d9d9d9")
        self.Label2_1_1_1_1.configure(activeforeground="black")
        self.Label2_1_1_1_1.configure(anchor='w')
        self.Label2_1_1_1_1.configure(background="#d9d9d9")
        self.Label2_1_1_1_1.configure(compound='left')
        self.Label2_1_1_1_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1_1_1_1.configure(font="-family {Segoe UI} -size 9")
        self.Label2_1_1_1_1.configure(foreground="#000000")
        self.Label2_1_1_1_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1_1_1_1.configure(highlightcolor="#000000")
        self.Label2_1_1_1_1.configure(text='''‰ª£ÊâìÊ¨°Êï∏''')

        self.Label2_1_1_1 = tk.Label(self.WaveInfo)
        self.Label2_1_1_1.place(relx=0.029, rely=0.685, height=22, width=72
                , bordermode='ignore')
        self.Label2_1_1_1.configure(activebackground="#d9d9d9")
        self.Label2_1_1_1.configure(activeforeground="black")
        self.Label2_1_1_1.configure(anchor='w')
        self.Label2_1_1_1.configure(background="#d9d9d9")
        self.Label2_1_1_1.configure(compound='left')
        self.Label2_1_1_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1_1_1.configure(font="-family {Segoe UI} -size 9")
        self.Label2_1_1_1.configure(foreground="#000000")
        self.Label2_1_1_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1_1_1.configure(highlightcolor="#000000")
        self.Label2_1_1_1.configure(text='''Ë®ÇÂñÆÊ®°Âºè''')

        self.Label2_1_1 = tk.Label(self.WaveInfo)
        self.Label2_1_1.place(relx=0.029, rely=0.486, height=22, width=72
                , bordermode='ignore')
        self.Label2_1_1.configure(activebackground="#d9d9d9")
        self.Label2_1_1.configure(activeforeground="black")
        self.Label2_1_1.configure(anchor='w')
        self.Label2_1_1.configure(background="#d9d9d9")
        self.Label2_1_1.configure(compound='left')
        self.Label2_1_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1_1.configure(font="-family {Segoe UI} -size 9")
        self.Label2_1_1.configure(foreground="#000000")
        self.Label2_1_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1_1.configure(highlightcolor="#000000")
        self.Label2_1_1.configure(text='''Êµ™ÊΩÆÊ®°Âºè''')

        self.Label2_1 = tk.Label(self.WaveInfo)
        self.Label2_1.place(relx=0.029, rely=0.292, height=22, width=72
                , bordermode='ignore')
        self.Label2_1.configure(activebackground="#d9d9d9")
        self.Label2_1.configure(activeforeground="black")
        self.Label2_1.configure(anchor='w')
        self.Label2_1.configure(background="#d9d9d9")
        self.Label2_1.configure(compound='left')
        self.Label2_1.configure(disabledforeground="#a3a3a3")
        self.Label2_1.configure(font="-family {Segoe UI} -size 9")
        self.Label2_1.configure(foreground="#000000")
        self.Label2_1.configure(highlightbackground="#d9d9d9")
        self.Label2_1.configure(highlightcolor="#000000")
        self.Label2_1.configure(text='''Ë≤∑ÂÆ∂ID''')

        self.RequestTimes = tk.Text(self.WaveInfo)
        self.RequestTimes.place(relx=0.267, rely=0.778, relheight=0.088
                , relwidth=0.159, bordermode='ignore')
        self.RequestTimes.configure(background="white")
        self.RequestTimes.configure(font="TkTextFont")
        self.RequestTimes.configure(foreground="#000000")
        self.RequestTimes.configure(highlightbackground="#d9d9d9")
        self.RequestTimes.configure(highlightcolor="#000000")
        self.RequestTimes.configure(insertbackground="#000000")
        self.RequestTimes.configure(selectbackground="#d9d9d9")
        self.RequestTimes.configure(selectforeground="black")
        self.RequestTimes.configure(wrap="word")
        self.RequestTimes_tooltip = \
        ToolTip(self.RequestTimes, '''Ë¶ÅÊâìÂπæÊ¨°ÈÉΩÂØ´Âú®ÈÄô''')

        self.WaveInfoAutoUpdateToggle = tk.Checkbutton(self.WaveInfo)
        self.WaveInfoAutoUpdateToggle.place(relx=0.521, rely=0.787
                , relheight=0.116, relwidth=0.311, bordermode='ignore')
        self.WaveInfoAutoUpdateToggle.configure(activebackground="#d9d9d9")
        self.WaveInfoAutoUpdateToggle.configure(activeforeground="black")
        self.WaveInfoAutoUpdateToggle.configure(anchor='w')
        self.WaveInfoAutoUpdateToggle.configure(background="#d9d9d9")
        self.WaveInfoAutoUpdateToggle.configure(command=waveTicket_support.SetWaveInfoAutoRefresh)
        self.WaveInfoAutoUpdateToggle.configure(compound='left')
        self.WaveInfoAutoUpdateToggle.configure(disabledforeground="#a3a3a3")
        self.WaveInfoAutoUpdateToggle.configure(font="-family {Segoe UI} -size 9")
        self.WaveInfoAutoUpdateToggle.configure(foreground="#000000")
        self.WaveInfoAutoUpdateToggle.configure(highlightbackground="#d9d9d9")
        self.WaveInfoAutoUpdateToggle.configure(highlightcolor="#000000")
        self.WaveInfoAutoUpdateToggle.configure(justify='left')
        self.WaveInfoAutoUpdateToggle.configure(text='''Ëá™ÂãïÊõ¥Êñ∞Êµ™ÂñÆË≥áË®ä''')
        self.WaveInfoAutoUpdateToggle.configure(variable=self.WaveInfoAutoRefresh)
        self.WaveInfoAutoUpdateToggle_tooltip = \
        ToolTip(self.WaveInfoAutoUpdateToggle, '''ÊòØÂê¶Âú®Êµ™ÂñÆË®äÊÅØÊõ¥Êñ∞ÊôÇÈáçË£ΩÁµêÂñÆË®äÊÅØ''')

        _style_code()
        self.DateSelectionBox = ttk.Combobox(self.WaveInfo)
        self.DateSelectionBox.place(relx=0.322, rely=0.116, relheight=0.111
                , relwidth=0.141, bordermode='ignore')
        self.value_list = ['‰∏ÄËôü','‰∫åËôü','‰∏âËôü','ÂõõËôü','‰∫îËôü','ÂÖ≠Ëôü','‰∏ÉËôü','ÂÖ´Ëôü','‰πùËôü','ÂçÅËôü','ÂçÅ‰∏ÄËôü','ÂçÅ‰∫åËôü','ÂçÅ‰∏âËôü','ÂçÅÂõõËôü','ÂçÅ‰∫îËôü','ÂçÅÂÖ≠Ëôü','ÂçÅ‰∏ÉËôü','ÂçÅÂÖ´Ëôü','ÂçÅ‰πùËôü','‰∫åÂçÅËôü','‰∫åÂçÅ‰∏ÄËôü','‰∫åÂçÅ‰∫åËôü','‰∫åÂçÅ‰∏âËôü','‰∫åÂçÅÂõõËôü','‰∫åÂçÅ‰∫îËôü','‰∫åÂçÅÂÖ≠Ëôü','‰∫åÂçÅ‰∏ÉËôü','‰∫åÂçÅÂÖ´Ëôü','‰∫åÂçÅ‰πùËôü','‰∏âÂçÅËôü','‰∏âÂçÅ‰∏ÄËôü',]
        self.DateSelectionBox.configure(values=self.value_list)
        self.DateSelectionBox.configure(font="-family {Segoe UI} -size 9")
        self.DateSelectionBox.configure(textvariable=self.DateText)
        self.DateSelectionBox_tooltip = \
        ToolTip(self.DateSelectionBox, '''Ë®ÇÂñÆÊôÇÈñì(Êó•Êúü)''')

        self.MonthSelectionBox = ttk.Combobox(self.WaveInfo)
        self.MonthSelectionBox.place(relx=0.172, rely=0.116, relheight=0.111
                , relwidth=0.141, bordermode='ignore')
        self.value_list = ['‰∏ÄÊúà','‰∫åÊúà','‰∏âÊúà','ÂõõÊúà','‰∫îÊúà','ÂÖ≠Êúà','‰∏ÉÊúà','ÂÖ´Êúà','‰πùÊúà','ÂçÅÊúà','ÂçÅ‰∏ÄÊúà','ÂçÅ‰∫åÊúà',]
        self.MonthSelectionBox.configure(values=self.value_list)
        self.MonthSelectionBox.configure(font="-family {Segoe UI} -size 9")
        self.MonthSelectionBox.configure(textvariable=self.MonthText)
        self.MonthSelectionBox_tooltip = \
        ToolTip(self.MonthSelectionBox, '''Ë®ÇÂñÆÊôÇÈñì(Êúà‰ªΩ)''')

        self.MinuteSelectionBox = ttk.Combobox(self.WaveInfo)
        self.MinuteSelectionBox.place(relx=0.618, rely=0.116, relheight=0.111
                , relwidth=0.141, bordermode='ignore')
        self.value_list = ['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59',]
        self.MinuteSelectionBox.configure(values=self.value_list)
        self.MinuteSelectionBox.configure(font="-family {Segoe UI} -size 9")
        self.MinuteSelectionBox.configure(textvariable=self.MinuteText)
        self.MinuteSelectionBox_tooltip = \
        ToolTip(self.MinuteSelectionBox, '''Ë®ÇÂñÆÊôÇÈñì(ÂàÜÈêò)''')

        self.Label2 = tk.Label(self.WaveInfo)
        self.Label2.place(relx=0.038, rely=0.116, height=22, width=60
                , bordermode='ignore')
        self.Label2.configure(activebackground="#d9d9d9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font="-family {Segoe UI} -size 9")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="#000000")
        self.Label2.configure(text='''Ë®ÇÂñÆÊôÇÈñì''')

        self.HourSelectionBox = ttk.Combobox(self.WaveInfo)
        self.HourSelectionBox.place(relx=0.47, rely=0.116, relheight=0.111
                , relwidth=0.141, bordermode='ignore')
        self.value_list = ['0','1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23',]
        self.HourSelectionBox.configure(values=self.value_list)
        self.HourSelectionBox.configure(font="-family {Segoe UI} -size 9")
        self.HourSelectionBox.configure(textvariable=self.HourText)
        self.HourSelectionBox_tooltip = \
        ToolTip(self.HourSelectionBox, '''Ë®ÇÂñÆÊôÇÈñì(Â∞èÊôÇ)''')

        self.RequestMode = tk.Text(self.WaveInfo)
        self.RequestMode.place(relx=0.031, rely=0.778, relheight=0.088
                , relwidth=0.161, bordermode='ignore')
        self.RequestMode.configure(background="white")
        self.RequestMode.configure(font="TkTextFont")
        self.RequestMode.configure(foreground="#000000")
        self.RequestMode.configure(highlightbackground="#d9d9d9")
        self.RequestMode.configure(highlightcolor="#000000")
        self.RequestMode.configure(insertbackground="#000000")
        self.RequestMode.configure(selectbackground="#d9d9d9")
        self.RequestMode.configure(selectforeground="black")
        self.RequestMode.configure(wrap="word")
        self.RequestMode_tooltip = \
        ToolTip(self.RequestMode, '''(ÁèæÂú®ÈÇÑÊúâË™∞Âú®Èô™Êâì)''')

        self.WaveMode = tk.Text(self.WaveInfo)
        self.WaveMode.place(relx=0.031, rely=0.583, relheight=0.088
                , relwidth=0.395, bordermode='ignore')
        self.WaveMode.configure(background="white")
        self.WaveMode.configure(font="TkTextFont")
        self.WaveMode.configure(foreground="#000000")
        self.WaveMode.configure(highlightbackground="#d9d9d9")
        self.WaveMode.configure(highlightcolor="#000000")
        self.WaveMode.configure(insertbackground="#000000")
        self.WaveMode.configure(selectbackground="#d9d9d9")
        self.WaveMode.configure(selectforeground="black")
        self.WaveMode.configure(wrap="word")
        self.WaveMode_tooltip = \
        ToolTip(self.WaveMode, '''(Â§ßÂÆ∂ÈÉΩË®ÇË∂ÖÂõ∞Èõ£‰∏çÊòØ„Ñá)''')

        self.BuyerID = tk.Text(self.WaveInfo)
        self.BuyerID.place(relx=0.031, rely=0.389, relheight=0.088
                , relwidth=0.395, bordermode='ignore')
        self.BuyerID.configure(background="white")
        self.BuyerID.configure(font="TkTextFont")
        self.BuyerID.configure(foreground="#000000")
        self.BuyerID.configure(highlightbackground="#d9d9d9")
        self.BuyerID.configure(highlightcolor="#000000")
        self.BuyerID.configure(insertbackground="#000000")
        self.BuyerID.configure(selectbackground="#d9d9d9")
        self.BuyerID.configure(selectforeground="black")
        self.BuyerID.configure(wrap="word")
        self.BuyerID_tooltip = \
        ToolTip(self.BuyerID, '''Ë™∞Ë≤∑ÁöÑ? ÁúãÈÄô!''')

        self.WaveRequestFinishMsgAutoResetToggle = tk.Checkbutton(self.WaveInfo)
        self.WaveRequestFinishMsgAutoResetToggle.place(relx=0.521, rely=0.694
                , relheight=0.116, relwidth=0.311, bordermode='ignore')
        self.WaveRequestFinishMsgAutoResetToggle.configure(activebackground="#d9d9d9")
        self.WaveRequestFinishMsgAutoResetToggle.configure(activeforeground="black")
        self.WaveRequestFinishMsgAutoResetToggle.configure(anchor='w')
        self.WaveRequestFinishMsgAutoResetToggle.configure(background="#d9d9d9")
        self.WaveRequestFinishMsgAutoResetToggle.configure(command=waveTicket_support.SetWaveRequestFinishMsgAutoReset)
        self.WaveRequestFinishMsgAutoResetToggle.configure(compound='left')
        self.WaveRequestFinishMsgAutoResetToggle.configure(disabledforeground="#a3a3a3")
        self.WaveRequestFinishMsgAutoResetToggle.configure(font="-family {Segoe UI} -size 9")
        self.WaveRequestFinishMsgAutoResetToggle.configure(foreground="#000000")
        self.WaveRequestFinishMsgAutoResetToggle.configure(highlightbackground="#d9d9d9")
        self.WaveRequestFinishMsgAutoResetToggle.configure(highlightcolor="#000000")
        self.WaveRequestFinishMsgAutoResetToggle.configure(justify='left')
        self.WaveRequestFinishMsgAutoResetToggle.configure(text='''Ëá™ÂãïÈáçË£ΩÁµêÂñÆË®äÊÅØ''')
        self.WaveRequestFinishMsgAutoResetToggle.configure(variable=self.WaveRequestFinishMsgAutoReset)
        self.WaveRequestFinishMsgAutoResetToggle_tooltip = \
        ToolTip(self.WaveRequestFinishMsgAutoResetToggle, '''ÊòØÂê¶Âú®Êµ™ÂñÆË®äÊÅØÊúâËÆäÂãïÊôÇËá™ÂãïÊõ¥Êñ∞Êµ™ÂñÆË≥áË®ä''')

        self.RefreshWaveInfoButton = tk.Button(self.WaveInfo)
        self.RefreshWaveInfoButton.place(relx=0.53, rely=0.532, height=26
                , width=55, bordermode='ignore')
        self.RefreshWaveInfoButton.configure(activebackground="#d9d9d9")
        self.RefreshWaveInfoButton.configure(activeforeground="black")
        self.RefreshWaveInfoButton.configure(background="#cccccc")
        self.RefreshWaveInfoButton.configure(command=waveTicket_support.RefreshWaveInfo)
        self.RefreshWaveInfoButton.configure(disabledforeground="#a3a3a3")
        self.RefreshWaveInfoButton.configure(font="-family {Segoe UI} -size 9")
        self.RefreshWaveInfoButton.configure(foreground="#000000")
        self.RefreshWaveInfoButton.configure(highlightbackground="#d9d9d9")
        self.RefreshWaveInfoButton.configure(highlightcolor="#000000")
        self.RefreshWaveInfoButton.configure(text='''Êõ¥Êñ∞Ë≥áË®ä''')
        self.RefreshWaveInfoButton_tooltip = \
        ToolTip(self.RefreshWaveInfoButton, '''ÊâãÂãïÊõ¥Êñ∞Êµ™ÂñÆË≥áË®ä''')

        self.BuyerIDCopyButton = tk.Button(self.WaveInfo)
        self.BuyerIDCopyButton.place(relx=0.662, rely=0.532, height=26, width=55
                , bordermode='ignore')
        self.BuyerIDCopyButton.configure(activebackground="#d9d9d9")
        self.BuyerIDCopyButton.configure(activeforeground="black")
        self.BuyerIDCopyButton.configure(background="#cccccc")
        self.BuyerIDCopyButton.configure(command=waveTicket_support.BuyerIDCopy)
        self.BuyerIDCopyButton.configure(disabledforeground="#a3a3a3")
        self.BuyerIDCopyButton.configure(font="-family {Segoe UI} -size 9")
        self.BuyerIDCopyButton.configure(foreground="#000000")
        self.BuyerIDCopyButton.configure(highlightbackground="#d9d9d9")
        self.BuyerIDCopyButton.configure(highlightcolor="#000000")
        self.BuyerIDCopyButton.configure(text='''Ë§áË£ΩID''')
        self.BuyerIDCopyButton_tooltip = \
        ToolTip(self.BuyerIDCopyButton, '''ÊääÊµ™ÂñÆË≥áË®ä‰ª•ÊóÅÈÇäÁöÑÊ†ºÂºèË§áË£ΩÂà∞Ââ™Ë≤ºÁ∞ø‰∏ä''')

        self.BuyerIDCopyFormatedButton = tk.Button(self.WaveInfo)
        self.BuyerIDCopyFormatedButton.place(relx=0.53, rely=0.37, height=31
                , width=115, bordermode='ignore')
        self.BuyerIDCopyFormatedButton.configure(activebackground="#d9d9d9")
        self.BuyerIDCopyFormatedButton.configure(activeforeground="black")
        self.BuyerIDCopyFormatedButton.configure(background="#cccccc")
        self.BuyerIDCopyFormatedButton.configure(command=waveTicket_support.BuyerIDCopyFormated)
        self.BuyerIDCopyFormatedButton.configure(disabledforeground="#a3a3a3")
        self.BuyerIDCopyFormatedButton.configure(font="-family {Segoe UI} -size 9")
        self.BuyerIDCopyFormatedButton.configure(foreground="#000000")
        self.BuyerIDCopyFormatedButton.configure(highlightbackground="#d9d9d9")
        self.BuyerIDCopyFormatedButton.configure(highlightcolor="#000000")
        self.BuyerIDCopyFormatedButton.configure(text='''Ë§áË£Ω /mail new ID''')
        self.BuyerIDCopyFormatedButton_tooltip = \
        ToolTip(self.BuyerIDCopyFormatedButton, '''ÊääÊµ™ÂñÆË≥áË®ä‰ª•ÊóÅÈÇäÁöÑÊ†ºÂºèË§áË£ΩÂà∞Ââ™Ë≤ºÁ∞ø‰∏ä''')

from time import time, localtime, strftime
class ToolTip(tk.Toplevel):
    """ Provides a ToolTip widget for Tkinter. """
    def __init__(self, wdgt, msg=None, msgFunc=None, delay=0.5,
                 follow=True):
        self.wdgt = wdgt
        self.parent = self.wdgt.master
        tk.Toplevel.__init__(self, self.parent, bg='black', padx=1, pady=1)
        self.withdraw()
        self.overrideredirect(True)
        self.msgVar = tk.StringVar()
        if msg is None:
            self.msgVar.set('No message provided')
        else:
            self.msgVar.set(msg)
        self.msgFunc = msgFunc
        self.delay = delay
        self.follow = follow
        self.visible = 0
        self.lastMotion = 0
        self.msg = tk.Message(self, textvariable=self.msgVar, bg=_bgcolor,
                   fg=_fgcolor, font="TkDefaultFont",
                   aspect=1000)
        self.msg.grid()
        self.wdgt.bind('<Enter>', self.spawn, '+')
        self.wdgt.bind('<Leave>', self.hide, '+')
        self.wdgt.bind('<Motion>', self.move, '+')
    def spawn(self, event=None):
        self.visible = 1
        self.after(int(self.delay * 1000), self.show)
    def show(self):
        if self.visible == 1 and time() - self.lastMotion > self.delay:
            self.visible = 2
        if self.visible == 2:
            self.deiconify()
    def move(self, event):
        self.lastMotion = time()
        if self.follow is False:
            self.withdraw()
            self.visible = 1
        self.geometry('+%i+%i' % (event.x_root + 20, event.y_root - 10))
        try:
            self.msgVar.set(self.msgFunc())
        except:
            pass
        self.after(int(self.delay * 1000), self.show)
    def hide(self, event=None):
        self.visible = 0
        self.withdraw()
    def update(self, msg):
        self.msgVar.set(msg)
    def configure(self, **kwargs):
        backgroundset = False
        foregroundset = False
        # Get the current tooltip text just in case the user doesn't provide any.
        current_text = self.msgVar.get()
        # to clear the tooltip text, use the .update method
        if 'debug' in kwargs.keys():
            debug = kwargs.pop('debug', False)
            if debug:
                for key, value in kwargs.items():
                    print(f'key: {key} - value: {value}')
        if 'background' in kwargs.keys():
            background = kwargs.pop('background')
            backgroundset = True
        if 'bg' in kwargs.keys():
            background = kwargs.pop('bg')
            backgroundset = True
        if 'foreground' in kwargs.keys():
            foreground = kwargs.pop('foreground')
            foregroundset = True
        if 'fg' in kwargs.keys():
            foreground = kwargs.pop('fg')
            foregroundset = True

        fontd = kwargs.pop('font', None)
        if 'text' in kwargs.keys():
            text = kwargs.pop('text')
            if (text == '') or (text == "\n"):
                text = current_text
            else:
                self.msgVar.set(text)
        reliefd = kwargs.pop('relief', 'flat')
        justifyd = kwargs.pop('justify', 'left')
        padxd = kwargs.pop('padx', 1)
        padyd = kwargs.pop('pady', 1)
        borderwidthd = kwargs.pop('borderwidth', 2)
        wid = self.msg      # The message widget which is the actual tooltip
        if backgroundset:
            wid.config(bg=background)
        if foregroundset:
            wid.config(fg=foreground)
        wid.config(font=fontd)
        wid.config(borderwidth=borderwidthd)
        wid.config(relief=reliefd)
        wid.config(justify=justifyd)
        wid.config(padx=padxd)
        wid.config(pady=padyd)
#                   End of Class ToolTip

def start_up():
    waveTicket_support.main()

if __name__ == '__main__':
    waveTicket_support.main()




